{"version":3,"sources":["logo.svg","components/InputBox/InputBox.js","components/SubmitButton/SubmitButton.js","components/TextLogo/TextLogo.js","components/LoginPage/LoginPage.js","components/SignUpPage/SignUpPage.js","components/Post/Post.js","components/HomePage/HomePage.js","components/AddPostPage/AddPostPage.js","components/ChangePassPage/ChangePassPage.js","components/UserList/UserlList.js","components/UserPage/UserPage.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["InputBox","label","type","variable","setVar","className","style","id","name","value","onChange","e","target","trim","placeholder","htmlFor","SubmitButton","onclick","text","onClick","TextLogo","LoginPage","useState","username","setUsername","pass","setPass","passInputType","setPassInputType","msg","setMsg","msgColor","setMsgColor","document","title","color","checked","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","error","localStorage","setItem","location","pathname","to","SignUpPage","gender","setGender","confirmPass","setConfirmPass","class","length","match","Post","post","poster","content","createdOn","HomePage","posts","setPosts","offest","setOffest","showLoadMoreBtn","setShowLoadMoreBtn","loadPosts","useEffect","map","AddPostPage","postTitle","setPostTitle","postContent","setPostContent","var","margin","ChangePassPage","currentPass","setCurrentPass","newPass","setNewPass","confirmNewPass","setConfirmNewPass","textDecoration","password","newPassword","confirmPassword","window","UserlList","userList","setCurrentUser","currentUser","user","UserPage","useParams","followers","userData","setUserData","showList","setShowList","dateJoined","isFollowed","filter","getItem","followerCount","followingCount","following","Navbar","theme","setTheme","showDropDown","setShowDropDown","showThemeDiv","setShowThemeDiv","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","transform","href","version","x","y","width","height","enableBackground","sysTheme","matchMedia","matches","App","t","l","currentUserName","setCurrentUserName","addEventListener","undefined","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8376590c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport \"./InputBox.scss\"\r\n\r\nfunction InputBox({label,type, variable, setVar, className, style}) {\r\n    return (\r\n        <div id=\"field\" className = {className} style={style}>\r\n            <input name=\"inputbox\" className=\"field-input\"\r\n                type={type}\r\n                value={variable} \r\n                onChange={e=>setVar(e.target.value.trim())} \r\n                placeholder={label}\r\n            />\r\n            <label htmlFor=\"inputbox\" className=\"field-label\">{label}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputBox\r\n","import React from 'react'\r\nimport \"./SubmitButton.scss\"\r\nfunction SubmitButton({onclick , text , className}) {\r\n    return (\r\n        <button className={`submit-button ${className}`} onClick={onclick}>\r\n            {text}\r\n        </button>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default SubmitButton\r\n","import React from 'react'\r\nimport \"./TextLogo.scss\"\r\n\r\nfunction TextLogo({className}) {\r\n    return (\r\n       \r\n<div id=\"text-logo\" className={className}>\r\n    SharePy\r\n</div>\r\n        \r\n    )\r\n}\r\n\r\nexport default TextLogo\r\n\r\n","import React , {useState, useContext, useEffect} from 'react';\r\nimport InputBox from \"../InputBox/InputBox\"\r\nimport SubmitButton from \"../SubmitButton/SubmitButton\"\r\nimport TextLogo from \"../TextLogo/TextLogo\"\r\n\r\n\r\nimport \"./LoginPage.scss\"\r\n\r\nimport {\r\n   Link,\r\n  } from \"react-router-dom\";\r\n\r\n\r\nfunction LoginPage() {\r\n\r\n   \r\n    const [username, setUsername] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [passInputType, setPassInputType] = useState(\"password\");\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [msgColor, setMsgColor] = useState(\"\")\r\n    document.title =\"SharePy - Log In\"\r\n\r\n\r\n    const login = () => {\r\n       \r\n        if (!username.trim()){\r\n            setMsg(\"Username can't be empty\");\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n        if (!pass.trim()){\r\n            setMsg(\"Password can't be empty\");\r\n            setMsgColor(\"red\")\r\n            return ;\r\n        }\r\n\r\n       \r\n        fetch(\"/login/\", {\r\n           method : \"POST\", \r\n           headers : {\r\n               \"Content-Type\" : \"application/json\"\r\n           },\r\n           body : JSON.stringify(\r\n               {\r\n                   \"username\" : username.trim(),\r\n                   \"password\" : pass.trim()\r\n               }\r\n           )\r\n       }).then(res=>res.json())\r\n       .then(data=>{\r\n           console.log(data);\r\n           if (data.type===\"error\"){\r\n               setMsg(data.error);\r\n               setMsgColor(\"red\");\r\n           }\r\n           else if (data.type===\"success\") {\r\n                setMsg(\"Logged In Successfully\");\r\n                setMsgColor(\"green\");\r\n                localStorage.setItem(\r\n                    \"username\", \r\n                    username\r\n                )\r\n                location.pathname=\"/\"\r\n           }\r\n       })\r\n\r\n       \r\n       \r\n      \r\n    }\r\n    \r\n    return (\r\n       \r\n        <div className=\"LoginPage\">\r\n            <div className=\"login-box\">\r\n                \r\n                <TextLogo className = \"title\"/>\r\n\r\n                <InputBox \r\n                    label=\"Enter Username\"\r\n                    variable={username}\r\n                    setVar={setUsername}\r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                />\r\n\r\n                <InputBox\r\n                    label=\"Enter Password\"\r\n                    variable={pass}\r\n                    setVar={setPass}\r\n                    type={passInputType}\r\n                    className=\"input\"\r\n                />\r\n\r\n                {\r\n                    msg && (\r\n                        <span style= {\r\n                            {color : msgColor , \r\n                            \"textAlign\" : \"center\",\r\n                            \"wordWrap\": \"break-word\",\r\n                            \"maxWidth\" : \"22rem\"\r\n                        }}>\r\n                            {msg}\r\n                        </span>\r\n                    )\r\n                }\r\n               \r\n\r\n                <div className=\"showPass-wrapper\">\r\n                    <input type=\"checkbox\" \r\n                    name=\"showPasss\" \r\n                    id=\"showPass-check\"\r\n                    onChange= {e=>{\r\n                        if(e.target.checked) \r\n                            setPassInputType(\"text\");\r\n                        else\r\n                            setPassInputType(\"password\")\r\n                    }}\r\n                    />\r\n                    <label htmlFor=\"showPass\" id=\"showPass-label\">Show Password</label>\r\n                </div>\r\n                <SubmitButton text=\"Log In\" onclick= {login} />\r\n                \r\n               \r\n\r\n\r\n                <Link to=\"/signup/\"  className = \"link\">\r\n                    Sign Up instead\r\n                </Link>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React , {useState, useContext} from 'react'\r\nimport InputBox from \"../InputBox/InputBox\"\r\nimport TextLogo from \"../TextLogo/TextLogo\"\r\nimport SubmitButton from \"../SubmitButton/SubmitButton\"\r\n\r\nimport {\r\n    Link,\r\n   } from \"react-router-dom\";\r\nimport \"./SignUpPage.scss\"\r\n\r\nfunction SignUpPage() {\r\n\r\n   \r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [gender, setGender] = useState(\"M\")\r\n    const [confirmPass, setConfirmPass] = useState(\"\");\r\n    const [passInputType, setPassInputType] = useState(\"password\");\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [msgColor, setMsgColor] = useState(\"\")\r\n\r\n    document.title = \"SharePy - Sign Up\"\r\n    \r\n    const signUp = () => {\r\n        if (!username.trim()){\r\n            setMsg(\"Username can't be empty\");\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n        if (!pass.trim()){\r\n            setMsg(\"Password can't be empty\");\r\n            setMsgColor(\"red\")\r\n            return ;\r\n        }\r\n\r\n        if (!confirmPass.trim()){\r\n            setMsg(\"Please confrim the password\");\r\n            setMsgColor(\"red\")\r\n            return ;\r\n        }\r\n\r\n        if (!(pass.trim()===confirmPass.trim())){\r\n            setMsg(\"Passwords don't match\")\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n        if(username.length<=3){\r\n            setMsg(\"Username must be at least 3 characters long\");\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n        if(!(pass.length>=8)){\r\n            setMsg(\"Password must atleast be 8 characters long\");\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n        if (!(pass.match(/^[A-Za-z]\\w{7,14}$/))){\r\n            setMsg(\"Password can only contain a-z,A-z,0-10,and _, and must not start with a number or _\");\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n       fetch(\r\n            '/signup/',\r\n            {\r\n                method : \"POST\",\r\n                headers: {\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body: JSON.stringify(\r\n                    {\r\n                        \"username\" : username,\r\n                        \"password\" : pass,\r\n                        \"confirmPass\" : confirmPass,\r\n                        \"gender\" : gender\r\n                    }\r\n                )\r\n            }\r\n        ).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data);\r\n           if (data.type===\"error\"){\r\n               setMsg(data.error);\r\n               setMsgColor(\"red\");\r\n           }\r\n           else if (data.type===\"success\") {\r\n                setMsg(\"Logged In Successfully\");\r\n                setMsgColor(\"green\");\r\n                localStorage.setItem(\r\n                    \"username\", \r\n                    username\r\n                )\r\n                location.pathname=\"/\";\r\n                \r\n           }\r\n        })\r\n\r\n       \r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"SignUpPage\">\r\n            <div className=\"signup-box\">\r\n                <TextLogo className=\"title\"/>\r\n                <InputBox \r\n                    label=\"Enter Username\"\r\n                    variable={username}\r\n                    setVar={setUsername}\r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                />\r\n\r\n                <InputBox\r\n                    label=\"Enter Password\"\r\n                    variable={pass}\r\n                    setVar={setPass}\r\n                    type={passInputType}\r\n                    className=\"input\"\r\n                />\r\n\r\n                <InputBox\r\n                    label=\"Confirm Password\"\r\n                    variable={confirmPass}\r\n                    setVar={setConfirmPass}\r\n                    type={passInputType}\r\n                    className=\"input\"\r\n                />\r\n\r\n                {\r\n                    msg && (\r\n                        <span style= {\r\n                            {color : msgColor , \r\n                            \"textAlign\" : \"center\",\r\n                            \"wordWrap\": \"break-word\",\r\n                            \"maxWidth\" : \"22rem\",\r\n                            \"paddingBottom\" : \"0.5rem\"\r\n                        }}>\r\n                            {msg}\r\n                        </span>\r\n                    )\r\n                }\r\n\r\n                <div className=\"combo-wrapper\">\r\n                    <label class = \"enterLb\" >Select Gender : </label>\r\n\r\n                    <select class = \"combo\" name = \"gender\" value={gender} onChange={e=>{\r\n                        setGender(e.target.value);\r\n                        let value = e.target.value;\r\n                        setGender(value);\r\n                        console.log({value , gender})\r\n                    }} >\r\n                        <option value=\"M\">Male </option>\r\n                        <option value = \"F\">Female</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"showPass-wrapper\">\r\n                    <input type=\"checkbox\" \r\n                    name=\"showPasss\" \r\n                    id=\"showPass-check\"\r\n                    onChange= {e=>{\r\n                        if(e.target.checked) \r\n                            setPassInputType(\"text\");\r\n                        else\r\n                            setPassInputType(\"password\")\r\n                    }}\r\n                    />\r\n                    <label htmlFor=\"showPass\" id=\"showPass-label\">Show Password</label>\r\n                </div>\r\n                \r\n                \r\n\r\n                <SubmitButton text=\"Sign Up\" onclick={signUp}/>\r\n                \r\n                <Link to=\"/login/\"  className = \"link\">\r\n                    Log In instead\r\n                </Link>\r\n\r\n                \r\n\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpPage\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./Post.scss\"\r\n\r\nfunction Post({post}) {\r\n    return (\r\n        <div className=\"post-wrapper\">\r\n                <p className=\"post-title\">{post.title}</p>\r\n                <span className=\"posted-by-text\">\r\n                    Posted By <Link to={`/user/${post.poster}`} className=\"poster\" >{post.poster}</Link>\r\n                </span>\r\n                <span className=\"post-content-box\">\r\n                    {post.content}\r\n                </span>\r\n                <span className=\"post-date\">\r\n                    {post.createdOn}\r\n                </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React , {useState , useEffect} from 'react'\r\nimport \"./HomePage.scss\"\r\nimport SubmitButton from \"../SubmitButton/SubmitButton\"\r\nimport Post from \"../Post/Post\"\r\n\r\nfunction HomePage() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [offest, setOffest] = useState(0);\r\n    const [showLoadMoreBtn, setShowLoadMoreBtn] = useState(true);\r\n\r\n    const loadPosts = () => {\r\n        console.log(\"SA\");\r\n        fetch(\"/getposts/\",\r\n            {\r\n                method : \"POST\",\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body : JSON.stringify(\r\n                    {\r\n                        \"offset\" : offest,\r\n                        \"limit\" : 3, \r\n                    }                    \r\n                )\r\n            }\r\n        )\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n\r\n            if (data.type === \"success\"){\r\n                setPosts([...posts , ...data.posts ] );\r\n                setOffest(offest + 3);\r\n            }\r\n            else{\r\n                if (!data.posts){\r\n                    setShowLoadMoreBtn(false);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(loadPosts,[]);\r\n\r\n    document.title = \"SharePy - Home\"\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n           <div className=\"post-area\">\r\n                    \r\n                {\r\n                    posts.map(\r\n                        post=><Post post={post} />\r\n                    )\r\n                }\r\n\r\n                {\r\n                    showLoadMoreBtn && (\r\n                        <SubmitButton \r\n                        className=\"load-more-button\"\r\n                        text=\"Load More Posts\"\r\n                        onclick={loadPosts}\r\n                />\r\n                    )\r\n                }\r\n                \r\n                \r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React , {useState} from 'react'\r\nimport \"./AddPostPage.scss\"\r\nimport InputBox from \"../InputBox/InputBox\"\r\nimport SubmitButton from \"../SubmitButton/SubmitButton\"\r\n\r\n\r\nfunction AddPostPage() {\r\n\r\n    const [postTitle, setPostTitle] = useState(\"\");\r\n    const [postContent, setPostContent] = useState(\"\");\r\n\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [msgColor, setMsgColor] = useState(\"\")\r\n\r\n    document.title = \"SharePy - Add Post\"\r\n\r\n    const addPost = () =>{\r\n        console.log({postTitle, postContent});\r\n\r\n        if (!postTitle){\r\n            setMsg(\"Post title can not be empty\");\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n        if(!postContent){\r\n            setMsg(\"Post Content can not be empty\");\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n        fetch(\r\n            \"/addpost/\",\r\n            {\r\n                method : \"POST\", \r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body:JSON.stringify(\r\n                    {\r\n                        title : postTitle,\r\n                        content : postContent\r\n                    }\r\n                )\r\n            }\r\n        ).then(res=>res.json())\r\n        .then(data=>{\r\n            if (data.type==\"success\"){\r\n                location.pathname=\"/\"     \r\n                return       \r\n            }\r\n            else{\r\n                setMsg(\r\n                    \"could not add post try again\"\r\n                )\r\n                setMsgColor(\"red\");\r\n                return;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddPostPage\">\r\n            <div className=\"add-page-wrapper\">\r\n                <h1>\r\n                    Add Post\r\n                </h1>\r\n\r\n                <InputBox \r\n                        className=\"add-post-title\"\r\n                        label=\"Post Title\"\r\n                        var={postTitle}\r\n                        setVar={setPostTitle}\r\n                        style={\r\n                            {\r\n                                margin: \"0 1rem 0\"\r\n                            }\r\n                        }\r\n\r\n                />\r\n                \r\n                <textarea \r\n                    className=\"add-post-content\"\r\n                    type = \"text\" \r\n                    placeholder=\"Post Content\"\r\n                    value={postContent}\r\n                    onChange={e=>setPostContent(e.target.value)}\r\n                    />\r\n\r\n                {\r\n                    msg && (\r\n                        <span style= {\r\n                            {color : msgColor , \r\n                            \"textAlign\" : \"center\",\r\n                            \"wordWrap\": \"break-word\",\r\n                            \"maxWidth\" : \"100%\",\r\n                        }}>\r\n                            {msg}\r\n                        </span>\r\n                    )\r\n                }\r\n                \r\n                <SubmitButton \r\n                    text=\"Add Post\"\r\n                    className= \"add-post-btn\"\r\n                    onclick={addPost}\r\n                />\r\n\r\n               \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPostPage\r\n","import React, {useState} from 'react'\r\nimport SubmitButton from \"../SubmitButton/SubmitButton\"\r\nimport TextLogo from \"../TextLogo/TextLogo\"\r\nimport InputBox from \"../InputBox/InputBox\"\r\nimport {\r\n    Link,\r\n   } from \"react-router-dom\";\r\n \r\n \r\nimport \"./ChangePassPage.scss\"\r\n\r\n\r\nfunction ChangePassPage() {\r\n\r\n    const [currentPass, setCurrentPass] = useState();\r\n    const [newPass, setNewPass] = useState();\r\n    const [confirmNewPass, setConfirmNewPass] = useState();\r\n    const [passInputType, setPassInputType] = useState(\"password\");\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [msgColor, setMsgColor] = useState(\"\");\r\n\r\n    const changePass = () =>{\r\n        \r\n\r\n\r\n        if (!(currentPass && newPass && confirmNewPass)){\r\n            setMsg(\"ALl fields must be filled\");\r\n            setMsgColor(\"red\");\r\n        }\r\n\r\n        if (!(newPass===confirmNewPass)){\r\n            setMsg(\"Confirmed password doesn't match\");\r\n            setMsgColor(\"Red\");\r\n        }\r\n\r\n        if(!(newPass.length>=4)){\r\n            setMsg(\"Password must atleast be 8 characters long\");\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n        if (!(newPass.match(/^[A-Za-z]\\w{7,14}$/))){\r\n            setMsg(\"Password can only contain a-z,A-z,0-10,and _, and must not start with a number or _\");\r\n            setMsgColor(\"red\");\r\n            return;\r\n        }\r\n\r\n        console.log({\r\n            currentPass,\r\n            newPass,\r\n            confirmNewPass\r\n        })\r\n\r\n        \r\n        fetch(\"/changepassword/\", \r\n        {\r\n            method:\"POST\",\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body : JSON.stringify(\r\n                {\r\n                    password : currentPass,\r\n                    newPassword : newPass,\r\n                    confirmPassword : confirmNewPass\r\n                }\r\n            )\r\n        }) .then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.type==\"error\"){\r\n                setMsg(data.error);\r\n                setMsgColor(\"red\");\r\n                return;\r\n            }\r\n            else{\r\n                \r\n                setMsg(\"password changed Succesfully\");\r\n                setMsgColor(\"green\");\r\n                window.location.pathname=\"/\"\r\n                return;\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"ChangePassPage\">\r\n            <div className=\"change-pass-Box\">\r\n            <Link to=\"/\" style={{textDecoration : \"none\"}}>\r\n                <TextLogo className = \"title\"/>\r\n            </Link>\r\n                <InputBox \r\n                    label=\"Current Password\"\r\n                    var={currentPass}\r\n                    setVar={setCurrentPass}\r\n                    type={passInputType}\r\n                />\r\n                <InputBox \r\n                    label= \"New Password\"\r\n                    var={newPass}\r\n                    setVar={setNewPass}\r\n                    type={passInputType}\r\n                />\r\n                <InputBox \r\n                    label=\"Confirm new passoword\"\r\n                    var={confirmNewPass}\r\n                    setVar={setConfirmNewPass}\r\n                    type={passInputType}\r\n                />\r\n               {\r\n                    msg && (\r\n                        <span style= {\r\n                            {color : msgColor , \r\n                            \"textAlign\" : \"center\",\r\n                            \"wordWrap\": \"break-word\",\r\n                            \"maxWidth\" : \"22rem\"\r\n                        }}>\r\n                            {msg}\r\n                        </span>\r\n                    )\r\n                }\r\n                <div className=\"showPass-wrapper\">\r\n                    <input type=\"checkbox\" \r\n                    name=\"showPasss\" \r\n                    id=\"showPass-check\"\r\n                    onChange= {e=>{\r\n                        if(e.target.checked) \r\n                            setPassInputType(\"text\");\r\n                        else\r\n                            setPassInputType(\"password\")\r\n                    }}\r\n                    />\r\n                    <label htmlFor=\"showPass\" id=\"showPass-label\">Show Password</label>\r\n                </div>\r\n               \r\n\r\n                <SubmitButton\r\n                    text=\"Change Password\"\r\n                    className=\"change-pass-btn\"\r\n                    onclick={changePass}\r\n                    \r\n                />\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassPage\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./UserList.scss\"\r\n\r\nfunction UserlList({title, userList, currentUser, setCurrentUser}) {\r\n    return (\r\n        <div className=\"user-list-box\">\r\n            <h1 className=\"title\">{title}</h1>\r\n            <div className=\"list\">\r\n                {userList.map(user=>(\r\n                    <Link style={{textDecoration : \"none\"}} to={`/user/${user}`} onClick= {(e)=>setCurrentUser(user)} >\r\n                        <div className=\"user-box\">{user}</div>\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserlList\r\n","import React , {useState, useEffect} from 'react'\r\nimport {useParams } from 'react-router-dom'\r\nimport SubmitButton from \"../SubmitButton/SubmitButton\"\r\nimport UserList from \"../UserList/UserlList\"\r\nimport \"./UserPage.scss\"\r\n\r\nfunction UserPage() {\r\n    \r\n    let {username} = useParams();\r\n    const [currentUser, setCurrentUser] = useState(username)\r\n    const [userData, setUserData] = useState({followers : [], followers : [] , });\r\n    const [showList, setShowList] = useState (null);\r\n\r\n    useEffect(\r\n        ()=>{\r\n            \r\n            setShowList(null);\r\n\r\n            fetch(\r\n                `/getuserinfo/${username}/`,\r\n                {\r\n                    method : \"POST\",\r\n                }\r\n            ).then(res=>res.json())\r\n            .then(data=>{\r\n                setUserData(data.data);\r\n                console.log(data.data)\r\n               \r\n            })\r\n        },\r\n        [username]\r\n        )\r\n\r\n\r\n    const follow = ()=> {\r\n        fetch(\r\n            '/follow/',\r\n            {\r\n                method : \"POST\",\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body : JSON.stringify(\r\n                    {\r\n                        \"username\" : username\r\n                    }\r\n                )\r\n            }\r\n        ).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data);\r\n            if (data.type==\"success\"){\r\n                setUserData(\r\n                    {\r\n                        ...userData,\r\n                        isFollowed : true,\r\n                        followers : [...userData.followers , localStorage.getItem(\"username\")],\r\n                        followerCount : userData.followerCount+1\r\n                       \r\n                    }\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    const unFollow = () => {\r\n        fetch(\r\n            '/unfollow/',\r\n            {\r\n                method : \"POST\",\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body : JSON.stringify(\r\n                    {\r\n                        \"username\" : username\r\n                    }\r\n                )\r\n            }\r\n        ).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data);\r\n            if (data.type==\"success\"){\r\n                setUserData(\r\n                    {\r\n                        ...userData,\r\n                        isFollowed : false,\r\n                        followers : userData.followers.filter(user=>user!=localStorage.getItem(\"username\")),\r\n                        followerCount : userData.followerCount-1\r\n                    }\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    const followBtnClick= () => {\r\n        if (userData.isFollowed)\r\n            unFollow();\r\n        else\r\n            follow();\r\n            \r\n    }\r\n\r\n    return (\r\n        <div className=\"UserPage\">\r\n            <div className=\"userInfoBox\">\r\n               <h1 className=\"usernameTitle\">{userData.name}</h1>\r\n                <div id=\"wrapper-1\">\r\n                    <div className=\"field\" id=\"joinedOnfield\">\r\n                        <div className=\"field-name\">Joined On : </div>\r\n                        <div className=\"field-data\">{userData.dateJoined}</div>\r\n                    </div>\r\n                    <SubmitButton \r\n                        text={ userData.isFollowed  ?\"Unfollow\": \"Follow\"}\r\n                        className=\"follow-btn\"\r\n                        onclick = {followBtnClick}\r\n                    />\r\n                </div>\r\n\r\n                <div id=\"wrapper-2\">\r\n                    <button className=\"field field-box\">\r\n                        <div className=\"field-name\">Gender</div>\r\n                        <div className=\"field-data\">{userData.gender==\"M\"?\"Male\":\"Female\"}</div>\r\n                    </button>\r\n                    <button className=\"field field-box\" onClick = {()=>{\r\n                            if(showList==\"followers\")\r\n                                setShowList(null)\r\n                            else\r\n                                setShowList(\"followers\")\r\n                            }\r\n                        }>\r\n                        <div className=\"field-name\">Followers</div>\r\n                        <div className=\"field-data\">{userData.followerCount}</div>\r\n                    </button>\r\n                    <button className=\"field field-box\" onClick={()=>{\r\n                            if(showList==\"following\")\r\n                                setShowList(null)\r\n                            else\r\n                                setShowList(\"following\")\r\n                            }\r\n                        } >\r\n                        <div className=\"field-name\">Following</div>\r\n                        <div className=\"field-data\">{userData.followingCount}</div>\r\n                    </button>\r\n                </div>\r\n           </div>\r\n\r\n            { (showList===\"followers\") && <UserList title=\"Followers\" userList={userData.followers} currentUser={currentUser} setCurrentUser={setCurrentUser}/> }\r\n            \r\n            { (showList===\"following\") &&<UserList title=\"Following\" userList={userData.following}  currentUser={currentUser} setCurrentUser={setCurrentUser} /> }\r\n   \r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default UserPage\r\n\r\n\r\n","import React, {useState, useContext} from 'react';\r\nimport TextLogo from \"../TextLogo/TextLogo\";\r\nimport \"./Navbar.scss\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SubmitButton from \"../SubmitButton/SubmitButton\"\r\n\r\nfunction Navbar({theme,setTheme}) {\r\n\r\n\r\n    const [showDropDown, setShowDropDown] = useState(false);\r\n    const [showThemeDiv, setShowThemeDiv] = useState(false);\r\n    const user = localStorage.getItem(\"username\");\r\n    const logout= e=>{\r\n        localStorage.setItem(\"username\", null);\r\n        location.pathname=\"/logout\"\r\n    }\r\n\r\n   \r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"Navbar\">\r\n                <Link to=\"/\" className=\"logo-link  logo\">\r\n                <TextLogo className=\"\"/>\r\n                </Link>\r\n\r\n                <div className=\"command-texts\">\r\n                    <Link to=\"/addpost/\" style={{\r\n                        color : \"var(--primary-fg)\",\r\n                        textDecoration : \"none\"\r\n                    }}>\r\n                        AddPost\r\n                    </Link>\r\n\r\n                    <button className=\"userBtn\" onClick = {e=>setShowDropDown(!showDropDown)}   >\r\n                        <div className =\"usernameTxt\"> \r\n                            {user}\r\n                        </div>\r\n\r\n                        <svg id=\"userIcon\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"user-circle\" className=\"svg-inline--fa fa-user-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\">\r\n                            <path fill=\"currentColor\" d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 96c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88zm0 344c-58.7 0-111.3-26.6-146.5-68.2 18.8-35.4 55.6-59.8 98.5-59.8 2.4 0 4.8.4 7.1 1.1 13 4.2 26.6 6.9 40.9 6.9 14.3 0 28-2.7 40.9-6.9 2.3-.7 4.7-1.1 7.1-1.1 42.9 0 79.7 24.4 98.5 59.8C359.3 421.4 306.7 448 248 448z\">\r\n                            </path>\r\n                        </svg>\r\n                        \r\n\r\n                    </button>\r\n\r\n                </div>\r\n                \r\n                <div className=\"command-btns\">\r\n                    <Link to=\"/addpost/\" style={{\r\n                            color : \"var(--primary-fg)\",\r\n                            textDecoration : \"none\",\r\n                            transform : \"scale(1.6)\"\r\n                        }}>\r\n                            +\r\n                    </Link>\r\n\r\n                    <button className=\"userBtn\" onClick = {e=>setShowDropDown(!showDropDown)}>\r\n                            <svg id=\"userIcon\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"user-circle\" className=\"svg-inline--fa fa-user-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\">\r\n                                <path fill=\"currentColor\" d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 96c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88zm0 344c-58.7 0-111.3-26.6-146.5-68.2 18.8-35.4 55.6-59.8 98.5-59.8 2.4 0 4.8.4 7.1 1.1 13 4.2 26.6 6.9 40.9 6.9 14.3 0 28-2.7 40.9-6.9 2.3-.7 4.7-1.1 7.1-1.1 42.9 0 79.7 24.4 98.5 59.8C359.3 421.4 306.7 448 248 448z\">\r\n                                </path>\r\n                            </svg>\r\n                    </button>\r\n\r\n                </div>\r\n\r\n               \r\n                {\r\n                    showDropDown && \r\n\r\n                      (<div className=\"dropdown-menu\">\r\n                    \r\n                    <Link to={`/user/${user}`} ><SubmitButton text=\"View Profile\"  /></Link>\r\n                   <SubmitButton text=\"Logout\" onclick={logout} />\r\n                    <a href=\"/changepassword/\"><SubmitButton text=\"Change Password\" /></a>\r\n                  \r\n                    <button className=\"theme-div-activator-wrapper\" onClick={e=>setShowThemeDiv(!showThemeDiv)}>\r\n                        \r\n                        <span>Theme</span> \r\n                    \r\n\r\n                        <svg \r\n                        version=\"1.1\" id=\"Capa_1\"   className=\"arrow-icon\"  x=\"0px\" y=\"0px\"\r\n\t                    width=\"451.847px\" height=\"451.847px\" viewBox=\"0 0 451.847 451.847\" style={{enableBackground:\"new 0 0 451.847 451.847;\"}}>\r\n                            <g>\r\n                                <path d=\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751\r\n                                    c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0\r\n                                    c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\"/>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                            <g>\r\n                            </g>\r\n                        </svg>\r\n\r\n                       \r\n\r\n                    </button>\r\n                    \r\n                    \r\n                    {(\r\n                        showThemeDiv && (\r\n                            <div className=\"theme-div\">\r\n                                <button className={ `theme-btn ${localStorage.getItem(\"theme\")==\"dark\"?\"theme-btn-selected\" : \"\"}` } onClick={e=>{\r\n                                    setTheme(\"dark\");\r\n                                    localStorage.setItem(\"theme\", \"dark\");\r\n                                }}>Dark Mode</button>\r\n                                <button className={ `theme-btn ${localStorage.getItem(\"theme\")==\"light\"?\"theme-btn-selected\" : \"\"}` } onClick={e=>{\r\n                                    setTheme(\"light\");\r\n                                    localStorage.setItem(\"theme\", \"light\")\r\n                                }}>Light Mode</button>\r\n                                <button className= \"theme-btn\" onClick={e=>{\r\n                                    localStorage.setItem(\"theme\", \"sys\");\r\n                                    let sysTheme=\"dark\";\r\n                                    if  (window.matchMedia) \r\n                                      sysTheme= window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches?\"light\" : \"dark\"\r\n                                    if(!(sysTheme==\"light\" || sysTheme==\"dark\"))\r\n                                        sysTheme=\"dark\"\r\n                                    setTheme(sysTheme);\r\n                                }}>Sysetm Default</button>\r\n\r\n                            </div>\r\n                        )\r\n                    )}\r\n                        \r\n                    </div>\r\n                    \r\n                    )\r\n\r\n                }\r\n             \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar\r\n","import logo from './logo.svg';\nimport React , {useState , useContext}from \"react\"\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage/LoginPage\"\nimport SignUpPage from \"./components/SignUpPage/SignUpPage\"\nimport HomePage from \"./components/HomePage/HomePage\"\nimport AddPostPage from \"./components/AddPostPage/AddPostPage\"\nimport ChangePassPage from \"./components/ChangePassPage/ChangePassPage\"\nimport UserPage from \"./components/UserPage/UserPage\"\nimport Navbar from \"./components/Navbar/Navbar\"\n\n\n\n\nfunction App() {\n  let t,l,sysTheme\n  \n  t=localStorage.getItem(\"theme\")\n\n  sysTheme=\"dark\"\n  if  (window.matchMedia) \n    sysTheme = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches?\"light\" : \"dark\"\n  \n\n  if (localStorage.getItem(\"theme\" ) ==\"sys\")\n    t=sysTheme;\n    \n  if (!(sysTheme==\"light\" || sysTheme==\"dark\"))\n    sysTheme=\"dark\";\n  if (!(t==\"light\" || t==\"dark\"))\n    t=sysTheme;\n    \n\n  \n  \n  \n\n  const [theme, setTheme] = useState( t);\n  const [currentUserName , setCurrentUserName] = useState(\"sa\");\n  const [user, setUser] = useState(localStorage.getItem(\"theme\"));\n\n  if  (window.matchMedia) \n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n      l = localStorage.getItem(\"theme\")\n      if (l==null || l==\"null\" || l==undefined || (l==\"sys\"))\n        setTheme( ( e.matches ? \"dark\" : \"light\"));\n\n    });\n\n \n\n  return (\n    \n    <Router>\n      \n      <div className={theme} id=\"main\">\n      \n\n\n        {!(location.pathname == \"/login\" \n        || location.pathname== \"/login/\" \n        ||location.pathname== \"/signup/\" \n        || location.pathname== \"/signup\" \n        || location.pathname== \"/changepassword/\" \n        ||location.pathname== \"/changepassword\"\n        ||location.pathname==\"/logout/\"\n        ||location.pathname==\"/logout\") && <Navbar theme={theme} setTheme={setTheme}/>}\n      \n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/login/\" render={()=><LoginPage currentUserName={currentUserName}  setCurrentUserName={setCurrentUserName}/>} />\n        <Route exact path=\"/signup/\" component={SignUpPage}  />\n        <Route exact path=\"/addpost/\" component={AddPostPage} />\n        <Route exact path=\"/changepassword/\" component={ChangePassPage} />\n        <Route exact path= \"/user/:username\" component={UserPage} />\n    </div>\n  \n\n    </Router>\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}